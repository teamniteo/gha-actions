name: "Prepare nix-shell"
description:
  Download cache, build nix-shell and potentially upload any new
  derivations to cache

inputs:
  auth_token:
    required: true
  cache:
    default: niteo
  nix_path:
    default: nixpkgs=./nix/default.nix
  push_filter:
    default:

runs:
  using: "composite"
  steps:

    - name: Figure out if we are running in a Namespace.so runner or not
      shell: bash
      run: |
        if [ -n "$NSC_PROFILE_TAG" ]; then
          echo "NAMESPACE_RUNNER=1" >> $GITHUB_ENV
        fi

    - name: namespacelabs/nscloud-cache-action cannot mkdir /nix so we do it manually
      if: env.NAMESPACE_RUNNER
      shell: bash
      run: |
        sudo mkdir /nix
        sudo chown $USER /nix

    - uses: namespacelabs/nscloud-cache-action@v1.2.13
      if: env.NAMESPACE_RUNNER
      with:
        path: /nix

    - uses: cachix/install-nix-action@v27
      with:
        nix_path: ${{ inputs.nix_path }}
        extra_nix_config: |
          system-features = kvm nixos-test

    - uses: cachix/cachix-action@v16
      with:
        name: ${{ inputs.cache }}
        authToken: ${{ inputs.auth_token }}
        pushFilter: ${{ inputs.push_filter }}

    - name: Build nix-shell
      shell: bash
      run: nix-shell --run "echo 'nix-shell successfully entered'"
