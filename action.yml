# Copyright (c) Niteo & AUTHORS
# SPDX-License-Identifier: BSD-3-Clause
#
name: 'Check for Alembic Migrations'
description: 'Checking consistency between alembic revision and models'
branding:
  icon: 'arrow-right-circle'
  color: 'gray-dark'
inputs:
  base:
    description: 'Base path to migrations folder.'
    required: true
runs:
    using: 'composite'
    steps:
      - name: Check that Base path is not Empty
        if: ${{ inputs.base == ''}}
        shell: bash
        run: |
          echo "::error title=ðŸ”´ error hint::Base path empty, you need to specify it to run the check."
          exit 1
      
      - name: Checking consistency between alembic revision and models
        shell: bash
        env:
          BASE: ${{ inputs.base }}
        run: |
          ALEMBIC="alembic -c etc/alembic.ini -x ini=etc/test.ini"
          nix-shell --run "$ALEMBIC upgrade head"
          nix-shell --run "$ALEMBIC revision --autogenerate -m 'Test Consistency'"

          # This works by running `alembic autogenerate` to generate a new
          # migration step, then verifying that it is "empty" by counting
          # How many "pass" words are in it.
          PRESENT_PASS_COUNT=$(grep -ic pass $BASE/*_test_consistency.py)
          if [ $PRESENT_PASS_COUNT != 2 ]; ?
            echo "::error title=ðŸ”´ error hint::You probably forgot to generate and commit a DB migration ..."
            cat "$BASE/*_test_consistency.py" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "::notice title=ðŸŸ¢ hint::Consistency between alembic revision and models is OK"
          fi
          rm -f $BASE/*_test_consistency.py
